---
import type { ImageMetadata } from 'astro';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { APP_BLOG_CONFIG } from '~/utils/config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;

const link = APP_BLOG_CONFIG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<article class={`max-w-md justify-between  ${image ? 'md:flex-col' : ''}`}>
  <header class="w-full h-20">
    <div class="text-center text-[12px] pt-2">
      <time datetime={String(post.publishDate)} class="inline-block">{getFormattedDate(post.publishDate)}</time>
      {
        post.category && (
          <>
            
            Â· <p class="inline-block">{post.category.replaceAll('-', ' ')}</p>
          </>
        )
      }
      <h2 class="text-xs sm:text-xs font-bold leading-tight my-2 mx-2">
        {
          link ? (
            <a class="hover:text-primary transition ease-in duration-200" href={link}>
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
    </div>
  </header>
  {
    image && (
      <a class="relative block group" href={link ?? 'javascript:void(0)'}>
        <div class="relative h-0 pb-[40.25%] md:h-2 overflow-hidden">
          {image && (
            <Image
              src={image}
              widths={[100, 300]}
              width={400}
              sizes="(max-width: 400px) 100px, 400px"
              alt={post.title}
              loading="eager"
              decoding="async"
              title={post.title}
            />
          )}
        </div>
      </a>
    )
  }

  <div class="mt-2">
    {
      post.excerpt && (
        <p class="flex-grow text-muted text-[12px] mx-2">{post.excerpt.split(' ').slice(0, 20).join(' ')}...</p>
      )
    }
    <footer class="my-2">
      <PostTags tags={post?.tags?.slice(0, 1)} />
    </footer>
  </div>
</article>
