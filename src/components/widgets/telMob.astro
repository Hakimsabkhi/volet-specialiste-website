---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  callToAction = await Astro.slots.render('callToAction'),
  callToAction2 = await Astro.slots.render('callToAction2'),
  image = await Astro.slots.render('image'),
  sommaire1 = await Astro.slots.render('sommaire1'),
  sommaire2 = await Astro.slots.render('sommaire2'),
  sommaire3 = await Astro.slots.render('sommaire3'),
  sommaire4 = await Astro.slots.render('sommaire4'),
  sommaire5 = await Astro.slots.render('sommaire5'),
  sommaire6 = await Astro.slots.render('sommaire6'),
  sommaire7 = await Astro.slots.render('sommaire7'),
  sommaire8 = await Astro.slots.render('sommaire8'),
} = Astro.props;
---
<section class="relative md:ml-5 md:-mt-[76px] not-prose">
  <div class="relative md:max-w-3xl xl:max-w-4xl px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="mt-2 py-1 md:py-1">
      <div class=" max-w-screen-lg">
        {
          tagline && (
            <p
              class="text-base text-center text-secondary font-bold tracking-wide uppercase"
              set:html={tagline}
            />
          )
        }
        {
          title && (
            <p
              class="text-lg font-bold text-center leading-tighter tracking-normal mb-4 font-heading"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl ">
          {subtitle && <p class=" text-center text-base mb-6" set:html={subtitle} />}
          <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
            {
              callToAction && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction === 'string' ? (
                    <Fragment set:html={callToAction} />
                  ) : (
                    <a class="btn btn-primary sm:mb-0 w-full" href={callToAction?.href} target="_blank" rel="noopener">
                      {callToAction?.icon && <></>}
                      {callToAction?.text}
                    </a>
                  )}
                </div>
              )
            }
            {
              callToAction2 && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction2 === 'string' ? (
                    <Fragment set:html={callToAction2} />
                  ) : (
                    <a class="btn w-full" href={callToAction2?.href}>
                      {callToAction2?.icon && (
                        <>
                          <Icon name={callToAction2.icon} class="w-5 h-5 mr-1 -ml-1.5" />
                          &nbsp;
                        </>
                      )}
                      {callToAction2.text}
                    </a>
                  )}
                </div>
              )
            }
          </div>
  </div>
        {content && <Fragment set:html={content} />}
      </div>
</div>
</section>