---
import { Icon } from 'astro-icon/components';
import type { Content } from '~/types';
import Headline from '../ui/Headline.astro';
import WidgetWrapper from '../ui/WidgetWrapper.astro';
import Image from '~/components/common/Image.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  items = [],
  image = await Astro.slots.render('image'),
  isReversed = false,
  isAfterContent = false,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props as Content;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-7xl ${isAfterContent ? 'pt-0 md:pt-0 lg:pt-0' : ''} ${classes?.container ?? ''}`}
>
  <Headline
    title={title}
    subtitle={subtitle}
    tagline={tagline}
    classes={{
      container: 'lg:max-w-2xl',
      title: 'text-xl md:text-3xl font-bold leading-tighter tracking-normal mb-4  ',
      subtitle: ' sm:text-center text-xl',
    }}
  />
  <div class="md:max-w-2xl xl:max-w-3xl md:px-8">
    <div class={`md:flex ${isReversed ? 'md:flex-row-reverse' : ''} md:gap-16`}>
      <div class="self-center">
        {content && <div class="mb-12 text-base font-sans tracking-wide" set:html={content} />}

        {
          items && (
            <div class="space-y-8">
              {items.map(({ title: title2, description, icon }) => (
                <div class="flex">
                  <div class="flex-shrink-0">
                    <div class="flex h-7 w-7 items-center justify-center rounded-full bg-green-600 text-gray-50">
                      <Icon name={icon ? icon : 'tabler:check'} class="w-5 h-5" />
                    </div>
                  </div>
                  <div class="ml-4 rtl:ml-0 rtl:mr-4">
                    {title2 && <h3 class="text-lg font-medium leading-6 ">{title2}</h3>}
                    {description && <p class="mt-2 " set:html={description} />}
                  </div>
                </div>
              ))}
            </div>
          )
        }
        <div aria-hidden="true" class="mt-10 md:mt-0 md:basis-1/2">
          {
            image && (
              <div class="relative m-auto max-w-4xl">
                {typeof image === 'string' ? (
                  <Fragment set:html={image} />
                ) : (
                  <Image
                    class=" w-full rounded-lg bg-gray-500 shadow-lg"
                    width={1200}
                    height={600}
                    widths={[600, 1200]}
                    sizes="(max-width: 600px) 100vw, 600px"
                    layout="responsive"
                    {...(image as any)}
                  />
                )}
              </div>
            )
          }
        </div>
        <!-- <div id="logo-sidebar" class=" fixed top-20 right-20 lg:right-0 xl:right-20 w-80 lg:w-60 xl:w-80 h-screen  invisible lg:visible">
          <div class="h-full px-3 py-4 overflow-y-auto text-center bg-gray-50">
            <p class="mt-5 mb-6 text-xl uppercase font-bold">Savoir plus:</p>
             <ul class="space-y-2 font-medium">
              
                <li>
                  <a href="/reparation-volet-roulant" class="items-center text-center text-blod p-2 text-gray-900 rounded-lg hover:bg-gray-100">Comment RÃ©parer un Volet Roulant</a>
                </li>
             </ul>
          </div>
        </div> -->
      </div>
    </div>
  </div>
</WidgetWrapper>
